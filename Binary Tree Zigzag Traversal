#include<bits/stdc++.h>

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)

{

   // Write your code here!

   vector<int> ans;

   if(root==NULL) return ans;

   queue<BinaryTreeNode<int>*> q;

   q.push(root);

   bool flag=true;

   while(!q.empty()) {

       int sz=q.size();

       int anssize=ans.size();

       ans.resize(anssize+sz);

       for(int i=0;i<sz;i++) {

           BinaryTreeNode<int> * node=q.front();

           q.pop();

           if(flag)

           ans[anssize+i]=node->data;

           else

            ans[anssize+sz-1-i]=node->data;  

           if(node->left!=NULL)

               q.push(node->left);

            if(node->right!=NULL)

               q.push(node->right);

       }

           flag= !flag;

   }

   return ans;  

}
